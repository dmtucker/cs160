/* vertex shader */

 

uniform float time;    // last compile in seconds

void main ( void ) {
    vec4 vertex = gl_Vertex;
    if (gl_MultiTexCoord0.s != 0) vertex.z += sin(time * 18.0 - vertex.x * 10.0) * .04;
    gl_Position = gl_ModelViewProjectionMatrix * vertex;
    
    gl_TexCoord[0] = gl_MultiTexCoord0;
}
 

 

 

 

/* fragment shader */

// Note: "pixel" shader is a misnomer.

 

uniform sampler2D tex0, tex1;

void main(void)
{
    gl_FragColor =    vec4(texture2D(tex0, gl_TexCoord[0].st)) *
                    vec4(texture2D(tex1, gl_TexCoord[0].st));
}
 

 

 

/* flagpole flag w/o pole */